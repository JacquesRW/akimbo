// engine details
pub const NAME: &str = env!("CARGO_PKG_NAME");
pub const VERSION: &str = env!("CARGO_PKG_VERSION");
pub const AUTHOR: &str = env!("CARGO_PKG_AUTHORS");

// Types of move to be generated
pub const ALL: bool = true;
pub const CAPTURES: bool = false;

/// The type of bound determined by the hash entry when it was searched.
pub struct Bound;
impl Bound {
    pub const LOWER: u8 = 1;
    pub const UPPER: u8 = 2;
    pub const EXACT: u8 = 3;
}

// piece/side indices
pub const PAWN: usize = 0;
pub const KNIGHT: usize = 1;
pub const BISHOP: usize = 2;
pub const ROOK: usize = 3;
pub const QUEEN: usize = 4;
pub const KING: usize = 5;
pub const EMPTY: usize = 6;
pub const WHITE: usize = 0;
pub const BLACK: usize = 1;

pub struct MoveFlags;
impl MoveFlags {
    pub const ALL: u16 = 15 << 12;
    pub const QUIET: u16 = 0 << 12;
    pub const DBL_PUSH: u16 = 1 << 12;
    pub const KS_CASTLE: u16 = 2 << 12;
    pub const QS_CASTLE: u16 = 3 << 12;
    pub const CAPTURE: u16 = 4 << 12;
    pub const EN_PASSANT: u16 = 5 << 12;
    pub const KNIGHT_PROMO: u16 = 8 << 12;
    pub const BISHOP_PROMO: u16 = 9 << 12;
    pub const ROOK_PROMO: u16 = 10 << 12;
    pub const QUEEN_PROMO: u16 = 11 << 12;
    pub const KNIGHT_PROMO_CAPTURE: u16 = 12 << 12;
    pub const BISHOP_PROMO_CAPTURE: u16 = 13 << 12;
    pub const ROOK_PROMO_CAPTURE: u16 = 14 << 12;
    pub const QUEEN_PROMO_CAPTURE: u16 = 15 << 12;
}

pub struct CastleRights;
impl CastleRights {
    pub const WHITE_QS: u8 = 8;
    pub const WHITE_KS: u8 = 4;
    pub const BLACK_QS: u8 = 2;
    pub const BLACK_KS: u8 = 1;
    pub const SIDES: [u8; 2] = [Self::WHITE_KS | Self::WHITE_QS, Self::BLACK_KS | Self::BLACK_QS];
    pub const NONE: u8 = 0;
}

// movegen
pub const MSB: u64 = 0x80_00_00_00_00_00_00_00;
pub const LSB: u64 = 1;
pub const PENRANK: [u64; 2] = [0x00FF000000000000, 0x000000000000FF00];
pub const DBLRANK: [u64; 2] = [0x00000000FF000000, 0x000000FF00000000];
pub const NORTH: [u64; 64] = [72340172838076672, 144680345676153344, 289360691352306688, 578721382704613376, 1157442765409226752, 2314885530818453504, 4629771061636907008, 9259542123273814016, 72340172838076416, 144680345676152832, 289360691352305664, 578721382704611328, 1157442765409222656, 2314885530818445312, 4629771061636890624, 9259542123273781248, 72340172838010880, 144680345676021760, 289360691352043520, 578721382704087040, 1157442765408174080, 2314885530816348160, 4629771061632696320, 9259542123265392640, 72340172821233664, 144680345642467328, 289360691284934656, 578721382569869312, 1157442765139738624, 2314885530279477248, 4629771060558954496, 9259542121117908992, 72340168526266368, 144680337052532736, 289360674105065472, 578721348210130944, 1157442696420261888, 2314885392840523776, 4629770785681047552, 9259541571362095104, 72339069014638592, 144678138029277184, 289356276058554368, 578712552117108736, 1157425104234217472, 2314850208468434944, 4629700416936869888, 9259400833873739776, 72057594037927936, 144115188075855872, 288230376151711744, 576460752303423488, 1152921504606846976, 2305843009213693952, 4611686018427387904, 9223372036854775808, 0, 0, 0, 0, 0, 0, 0, 0];
pub const EAST: [u64; 64] = [254, 252, 248, 240, 224, 192, 128, 0, 65024, 64512, 63488, 61440, 57344, 49152, 32768, 0, 16646144, 16515072, 16252928, 15728640, 14680064, 12582912, 8388608, 0, 4261412864, 4227858432, 4160749568, 4026531840, 3758096384, 3221225472, 2147483648, 0, 1090921693184, 1082331758592, 1065151889408, 1030792151040, 962072674304, 824633720832, 549755813888, 0, 279275953455104, 277076930199552, 272678883688448, 263882790666240, 246290604621824, 211106232532992, 140737488355328, 0, 71494644084506624, 70931694131085312, 69805794224242688, 67553994410557440, 63050394783186944, 54043195528445952, 36028797018963968, 0, 18302628885633695744, 18158513697557839872, 17870283321406128128, 17293822569102704640, 16140901064495857664, 13835058055282163712, 9223372036854775808, 0];
pub const SOUTH: [u64; 64] = [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 8, 16, 32, 64, 128, 257, 514, 1028, 2056, 4112, 8224, 16448, 32896, 65793, 131586, 263172, 526344, 1052688, 2105376, 4210752, 8421504, 16843009, 33686018, 67372036, 134744072, 269488144, 538976288, 1077952576, 2155905152, 4311810305, 8623620610, 17247241220, 34494482440, 68988964880, 137977929760, 275955859520, 551911719040, 1103823438081, 2207646876162, 4415293752324, 8830587504648, 17661175009296, 35322350018592, 70644700037184, 141289400074368, 282578800148737, 565157600297474, 1130315200594948, 2260630401189896, 4521260802379792, 9042521604759584, 18085043209519168, 36170086419038336];
pub const WEST: [u64; 64] = [0, 1, 3, 7, 15, 31, 63, 127, 0, 256, 768, 1792, 3840, 7936, 16128, 32512, 0, 65536, 196608, 458752, 983040, 2031616, 4128768, 8323072, 0, 16777216, 50331648, 117440512, 251658240, 520093696, 1056964608, 2130706432, 0, 4294967296, 12884901888, 30064771072, 64424509440, 133143986176, 270582939648, 545460846592, 0, 1099511627776, 3298534883328, 7696581394432, 16492674416640, 34084860461056, 69269232549888, 139637976727552, 0, 281474976710656, 844424930131968, 1970324836974592, 4222124650659840, 8725724278030336, 17732923532771328, 35747322042253312, 0, 72057594037927936, 216172782113783808, 504403158265495552, 1080863910568919040, 2233785415175766016, 4539628424389459968, 9151314442816847872];
pub const NE: [u64; 64] = [9241421688590303744, 36099303471055872, 141012904183808, 550831656960, 2151686144, 8404992, 32768, 0, 4620710844295151616, 9241421688590303232, 36099303471054848, 141012904181760, 550831652864, 2151677952, 8388608, 0, 2310355422147510272, 4620710844295020544, 9241421688590041088, 36099303470530560, 141012903133184, 550829555712, 2147483648, 0, 1155177711056977920, 2310355422113955840, 4620710844227911680, 9241421688455823360, 36099303202095104, 141012366262272, 549755813888, 0, 577588851233521664, 1155177702467043328, 2310355404934086656, 4620710809868173312, 9241421619736346624, 36099165763141632, 140737488355328, 0, 288793326105133056, 577586652210266112, 1155173304420532224, 2310346608841064448, 4620693217682128896, 9241386435364257792, 36028797018963968, 0, 144115188075855872, 288230376151711744, 576460752303423488, 1152921504606846976, 2305843009213693952, 4611686018427387904, 9223372036854775808, 0, 0, 0, 0, 0, 0, 0, 0, 0];
pub const SE: [u64; 64] = [0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 8, 16, 32, 64, 128, 0, 516, 1032, 2064, 4128, 8256, 16512, 32768, 0, 132104, 264208, 528416, 1056832, 2113664, 4227072, 8388608, 0, 33818640, 67637280, 135274560, 270549120, 541097984, 1082130432, 2147483648, 0, 8657571872, 17315143744, 34630287488, 69260574720, 138521083904, 277025390592, 549755813888, 0, 2216338399296, 4432676798592, 8865353596928, 17730707128320, 35461397479424, 70918499991552, 140737488355328, 0, 567382630219904, 1134765260439552, 2269530520813568, 4539061024849920, 9078117754732544, 18155135997837312, 36028797018963968, 0];
pub const SW: [u64; 64] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 8, 16, 32, 64, 0, 256, 513, 1026, 2052, 4104, 8208, 16416, 0, 65536, 131328, 262657, 525314, 1050628, 2101256, 4202512, 0, 16777216, 33619968, 67240192, 134480385, 268960770, 537921540, 1075843080, 0, 4294967296, 8606711808, 17213489152, 34426978560, 68853957121, 137707914242, 275415828484, 0, 1099511627776, 2203318222848, 4406653222912, 8813306511360, 17626613022976, 35253226045953, 70506452091906, 0, 281474976710656, 564049465049088, 1128103225065472, 2256206466908160, 4512412933881856, 9024825867763968, 18049651735527937];
pub const NW: [u64; 64] = [0, 256, 66048, 16909312, 4328785920, 1108169199616, 283691315109888, 72624976668147712, 0, 65536, 16908288, 4328783872, 1108169195520, 283691315101696, 72624976668131328, 145249953336262656, 0, 16777216, 4328521728, 1108168671232, 283691314053120, 72624976666034176, 145249953332068352, 290499906664136704, 0, 4294967296, 1108101562368, 283691179835392, 72624976397598720, 145249952795197440, 290499905590394880, 580999811180789760, 0, 1099511627776, 283673999966208, 72624942037860352, 145249884075720704, 290499768151441408, 580999536302882816, 1161999072605765632, 0, 281474976710656, 72620543991349248, 145241087982698496, 290482175965396992, 580964351930793984, 1161928703861587968, 2323857407723175936, 0, 72057594037927936, 144115188075855872, 288230376151711744, 576460752303423488, 1152921504606846976, 2305843009213693952, 4611686018427387904, 0, 0, 0, 0, 0, 0, 0, 0];
pub static KNIGHT_ATTACKS: [u64; 64] = [132096, 329728, 659712, 1319424, 2638848, 5277696, 10489856, 4202496, 33816580, 84410376, 168886289, 337772578, 675545156, 1351090312, 2685403152, 1075839008, 8657044482, 21609056261, 43234889994, 86469779988, 172939559976, 345879119952, 687463207072, 275414786112, 2216203387392, 5531918402816, 11068131838464, 22136263676928, 44272527353856, 88545054707712, 175990581010432, 70506185244672, 567348067172352, 1416171111120896, 2833441750646784, 5666883501293568, 11333767002587136, 22667534005174272, 45053588738670592, 18049583422636032, 145241105196122112, 362539804446949376, 725361088165576704, 1450722176331153408, 2901444352662306816, 5802888705324613632, 11533718717099671552, 4620693356194824192, 288234782788157440, 576469569871282176, 1224997833292120064, 2449995666584240128, 4899991333168480256, 9799982666336960512, 1152939783987658752, 2305878468463689728, 1128098930098176, 2257297371824128, 4796069720358912, 9592139440717824, 19184278881435648, 38368557762871296, 4679521487814656, 9077567998918656];
pub static KING_ATTACKS: [u64; 64] = [770, 1797, 3594, 7188, 14376, 28752, 57504, 49216, 197123, 460039, 920078, 1840156, 3680312, 7360624, 14721248, 12599488, 50463488, 117769984, 235539968, 471079936, 942159872, 1884319744, 3768639488, 3225468928, 12918652928, 30149115904, 60298231808, 120596463616, 241192927232, 482385854464, 964771708928, 825720045568, 3307175149568, 7718173671424, 15436347342848, 30872694685696, 61745389371392, 123490778742784, 246981557485568, 211384331665408, 846636838289408, 1975852459884544, 3951704919769088, 7903409839538176, 15806819679076352, 31613639358152704, 63227278716305408, 54114388906344448, 216739030602088448, 505818229730443264, 1011636459460886528, 2023272918921773056, 4046545837843546112, 8093091675687092224, 16186183351374184448, 13853283560024178688, 144959613005987840, 362258295026614272, 724516590053228544, 1449033180106457088, 2898066360212914176, 5796132720425828352, 11592265440851656704, 4665729213955833856];
pub static PAWN_ATTACKS: [[u64; 64];2] = [
    [512, 1280, 2560, 5120, 10240, 20480, 40960, 16384, 131072, 327680, 655360, 1310720, 2621440, 5242880, 10485760, 4194304, 33554432, 83886080, 167772160, 335544320, 671088640, 1342177280, 2684354560, 1073741824, 8589934592, 21474836480, 42949672960, 85899345920, 171798691840, 343597383680, 687194767360, 274877906944, 2199023255552, 5497558138880, 10995116277760, 21990232555520, 43980465111040, 87960930222080, 175921860444160, 70368744177664, 562949953421312, 1407374883553280, 2814749767106560, 5629499534213120, 11258999068426240, 22517998136852480, 45035996273704960, 18014398509481984, 144115188075855872, 360287970189639680, 720575940379279360, 1441151880758558720, 2882303761517117440, 5764607523034234880, 11529215046068469760, 4611686018427387904, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 2, 5, 10, 20, 40, 80, 160, 64, 512, 1280, 2560, 5120, 10240, 20480, 40960, 16384, 131072, 327680, 655360, 1310720, 2621440, 5242880, 10485760, 4194304, 33554432, 83886080, 167772160, 335544320, 671088640, 1342177280, 2684354560, 1073741824, 8589934592, 21474836480, 42949672960, 85899345920, 171798691840, 343597383680, 687194767360, 274877906944, 2199023255552, 5497558138880, 10995116277760, 21990232555520, 43980465111040, 87960930222080, 175921860444160, 70368744177664, 562949953421312, 1407374883553280, 2814749767106560, 5629499534213120, 11258999068426240, 22517998136852480, 45035996273704960, 18014398509481984]
];

// castling
pub const CASTLE_MOVES: [[(u64, usize, usize);2];2] = [[(9, 0, 3), (160, 7, 5)], [(0x0900000000000000, 56, 59), (0xA000000000000000, 63, 61)]];
pub const B1C1D1: u64 = 14;
pub const F1G1: u64 = 96;
pub const B8C8D8: u64 = 0x0E00000000000000;
pub const F8G8: u64 = 0x6000000000000000;
pub static CASTLE_RIGHTS: [u8; 64] = [7, 15, 15, 15, 3, 15, 15, 11, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 15, 15, 15, 12, 15, 15, 14];

// search/eval
pub const MAX_PLY: i8 = i8::MAX - 8;
pub const MAX: i16 = 30000;
pub const MATE_THRESHOLD: i16 = MAX - u8::MAX as i16;
pub const SIDE_FACTOR: [i16; 3] = [1, -1, 0];
pub const PHASE_VALS: [i16; 7] = [0, 1, 1, 2, 4, 0, 0];
pub const TPHASE: i32 = 24;

// move ordering
pub const HASH_MOVE: u16 = 30000;
pub const PROMOTION: u16 = 600;
pub const KILLER: u16 = 500;
pub const QUIET: u16 = 0;
pub const MVV_LVA: [[u16; 7]; 7] = [[1500, 1400, 1300, 1200, 1100, 1000, 0], [2500, 2400, 2300, 2200, 2100, 2000, 0], [3500, 3400, 3300, 3200, 3100, 3000, 0], [4500, 4400, 4300, 4200, 4100, 4000, 0], [5500, 5400, 5300, 5200, 5100, 5000,0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]];

// eval values
pub static PST_MG: [[i16; 64];6] = [
    [82, 82, 82, 82, 82, 82, 82, 82, 191, 221, 168, 198, 180, 208, 106, 61, 76, 95, 115, 128, 143, 136, 117, 72, 64, 90, 83, 97, 100, 88, 95, 61, 56, 78, 79, 89, 92, 86, 95, 57, 57, 76, 74, 73, 83, 82, 117, 73, 49, 75, 62, 52, 65, 99, 124, 62, 82, 82, 82, 82, 82, 82, 82, 82],
    [171, 244, 305, 307, 397, 247, 329, 225, 283, 306, 395, 385, 369, 409, 346, 330, 308, 389, 384, 400, 437, 466, 407, 391, 349, 352, 368, 385, 372, 397, 361, 373, 331, 347, 358, 350, 362, 352, 364, 344, 314, 337, 343, 343, 361, 351, 355, 319, 303, 292, 327, 341, 335, 347, 332, 327, 225, 316, 276, 303, 318, 334, 316, 295],
    [328, 373, 293, 334, 336, 333, 365, 362, 339, 378, 361, 362, 394, 411, 369, 331, 351, 391, 399, 411, 410, 447, 411, 386, 353, 374, 394, 405, 395, 411, 374, 365, 373, 385, 379, 387, 398, 373, 373, 384, 368, 388, 378, 378, 373, 379, 383, 369, 385, 375, 378, 363, 370, 379, 389, 369, 327, 364, 351, 344, 358, 350, 336, 337],
    [515, 524, 519, 540, 551, 497, 513, 527, 509, 512, 536, 545, 555, 552, 510, 533, 483, 504, 507, 523, 514, 536, 551, 510, 459, 476, 492, 506, 504, 509, 488, 469, 451, 458, 471, 480, 486, 469, 494, 458, 436, 461, 467, 465, 478, 479, 479, 455, 436, 462, 461, 468, 479, 479, 479, 404, 463, 470, 475, 486, 486, 475, 447, 452],
    [1011, 1025, 1052, 1048, 1085, 1080, 1089, 1066, 1007, 991, 1027, 1026, 1018, 1096, 1047, 1083, 1020, 1014, 1024, 1037, 1061, 1096, 1088, 1070, 1007, 1009, 1014, 1016, 1030, 1041, 1035, 1035, 1016, 1003, 1017, 1019, 1026, 1022, 1029, 1029, 1012, 1028, 1016, 1019, 1019, 1029, 1036, 1022, 989, 1024, 1032, 1025, 1027, 1034, 1013, 1023, 1026, 1011, 1011, 1030, 1010, 994, 981, 970],
    [-54, 45, 34, 17, -28, -30, 17, 2, 49, 16, -7, 8, 7, -3, -10, -41, 4, 23, 5, -2, -11, 15, 20, -17, -9, -12, -11, -24, -24, -20, -9, -41, -45, -1, -25, -48, -45, -41, -34, -56, 3, -4, -19, -49, -46, -32, -14, -31, 15, 0, -17, -67, -47, -22, 14, 17, -34, 23, 3, -69, 7, -42, 29, 23]
];
pub static PST_EG: [[i16; 64];6] = [
    [94, 94, 94, 94, 94, 94, 94, 94, 266, 258, 244, 216, 223, 225, 270, 284, 195, 188, 175, 158, 149, 142, 176, 180, 135, 124, 111, 99, 92, 99, 115, 115, 116, 110, 94, 88, 89, 90, 101, 99, 105, 106, 92, 100, 95, 93, 94, 91, 115, 110, 105, 105, 110, 96, 96, 92, 94, 94, 94, 94, 94, 94, 94, 94],
    [238, 251, 272, 260, 247, 260, 217, 181, 259, 284, 258, 283, 273, 249, 253, 239, 264, 263, 293, 288, 273, 266, 263, 240, 262, 288, 304, 299, 300, 293, 291, 263, 261, 276, 296, 304, 297, 302, 282, 258, 249, 272, 277, 294, 285, 273, 260, 254, 239, 263, 264, 270, 275, 258, 254, 237, 250, 221, 266, 263, 255, 247, 231, 215],
    [285, 278, 297, 292, 294, 293, 273, 273, 291, 300, 310, 296, 295, 281, 289, 279, 300, 294, 298, 296, 296, 297, 299, 296, 291, 308, 303, 313, 310, 301, 309, 295, 287, 296, 312, 316, 302, 307, 295, 285, 284, 291, 303, 307, 308, 293, 287, 282, 274, 276, 286, 298, 299, 284, 277, 260, 274, 283, 266, 287, 283, 276, 281, 277],
    [520, 521, 528, 528, 521, 532, 528, 520, 525, 527, 526, 523, 510, 511, 524, 515, 528, 526, 527, 522, 520, 509, 506, 512, 524, 525, 529, 517, 514, 515, 517, 523, 516, 524, 524, 519, 509, 508, 504, 509, 511, 514, 509, 511, 501, 493, 504, 500, 509, 507, 513, 512, 501, 498, 503, 515, 505, 512, 517, 509, 503, 497, 519, 494],
    [937, 967, 961, 966, 957, 949, 945, 956, 927, 967, 977, 989, 1000, 955, 962, 932, 928, 951, 958, 984, 984, 975, 965, 940, 936, 965, 975, 989, 994, 977, 995, 978, 920, 964, 956, 985, 970, 975, 975, 959, 913, 910, 954, 939, 943, 946, 941, 937, 919, 911, 901, 920, 915, 906, 901, 904, 895, 905, 910, 888, 922, 894, 906, 890],
    [-56, -24, -17, -3, 16, 30, 20, -22, -10, 31, 33, 30, 28, 47, 52, 20, 12, 30, 35, 31, 36, 50, 54, 28, 0, 30, 37, 39, 37, 43, 36, 14, -7, 4, 27, 33, 34, 31, 18, -3, -23, 0, 12, 25, 26, 17, 6, -8, -27, -11, 6, 15, 15, 5, -9, -22, -46, -36, -18, -8, -36, -10, -31, -54]
];

// fen strings
pub const STARTPOS: &str = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
pub const KIWIPETE: &str = "r3k2r/p1ppqpb1/bn2pnp1/3PN3/1p2P3/2N2Q1p/PPPBBPPP/R3K2R w KQkq - 0 1";
pub const LASKER: &str = "8/k7/3p4/p2P1p2/P2P1P2/8/8/K7 w - - 0 1";

// uci <-> u16
pub const TWELVE: u16 = 0b0000_1111_1111_1111;

// hyperbola quintessence rook and bishop attacks
pub static MASKS: [Mask; 64] = masks();

#[derive(Clone, Copy)]
pub struct Mask {
    pub bitmask: u64,
    pub diag: u64,
    pub antidiag: u64,
    pub file: u64,
}

const fn masks() -> [Mask; 64] {
    let mut masks: [Mask; 64] = [Mask { bitmask: 0, diag: 0, antidiag: 0, file: 0} ; 64];
    let mut idx: usize = 0;
    while idx < 64 {
        masks[idx].bitmask = 1 << idx;
        masks[idx].diag = NE[idx] | SW[idx];
        masks[idx].antidiag = NW[idx] | SE[idx];
        masks[idx].file = NORTH[idx] | SOUTH[idx];
        idx += 1;
    }
    masks
}
